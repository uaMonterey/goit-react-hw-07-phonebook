{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/store.js","components/Container/Container.jsx","redux/phonebook/phonebook-selectors.js","redux/phonebook/phonebook-operations.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/ContactList/ContactList.container.jsx","components/Filter/Filter.jsx","App.jsx","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","contacts","createReducer","_","payload","state","filter","contact","id","loading","combineReducers","store","configureStore","reducer","phonebookReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","Container","children","title","className","s","container","getFilter","getAllContacts","phonebookSelectors","getLoading","getCurrentContacts","createSelector","allContacts","normalizeFilterRequest","toLowerCase","name","includes","axios","defaults","baseURL","initialState","number","ContactForm","handleInputChange","e","setState","currentTarget","value","handleSubmit","preventDefault","console","log","props","contactList","onSubmit","some","alert","reset","form__contact","this","label","htmlFor","input","onChange","type","pattern","required","button","Component","connect","dispatch","post","then","data","catch","error","ContactList","onContactDelete","list","map","item","wrap","onClick","propTypes","PropTypes","array","isRequired","func","contactId","delete","target","App","fetchContacts","isLoading","get","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c1322c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__NIwCT\",\"title\":\"Filter_title__2j3P6\",\"input\":\"Filter_input__19ysn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2fZK5\",\"title\":\"Container_title__2NwRr\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactRequest = createAction('contacts/fetchContactRequest');\nconst fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nconst fetchContactError = createAction('contacts/fetchContactError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\nconst changeFilter = createAction('contacts/Filter');\n\nexport {\n  changeFilter,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n};\n","// import { combineReducers } from 'redux';\n\n// import { createReducer } from '@reduxjs/toolkit';\n// import { addContact, deleteContact, changeFilter } from './phonebook-actions';\n// import intialContacts from 'data/contacts.json';\n\n// const items = createReducer(intialContacts, {\n//   [addContact]: (state, action) => [action.payload, ...state],\n//   [deleteContact]: (state, action) =>\n//     state.filter(({ id }) => id !== action.payload),\n// });\n// const filter = createReducer('', {\n//   [changeFilter]: (_, action) => action.payload,\n// });\n// console.log('contact Reduser', items);\n\n// export default combineReducers({\n//   items,\n//   filter,\n// });\n\nimport { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from '../phonebook/phonebook-actions';\n\nconst contacts = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport phonebookReducer from './phonebook/phonebook-reducer';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport logger from 'redux-logger';\n\nexport const store = configureStore({\n  reducer: phonebookReducer,\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n  // devTools: process.env.NODE_ENV === 'development',\n  devTools: true,\n});\n","import React from 'react';\r\nimport s from './Container.module.css';\r\n\r\nconst Container = ({ children, title }) => (\r\n  <div className={s.container}>\r\n    <h1 className={s.title}>{title}</h1>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Container;\r\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.loading;\n\nconst getFilter = state => state.filter;\n\nconst getAllContacts = state => state.contacts;\n\nconst getCurrentContacts = createSelector(\n  [getAllContacts, getFilter],\n  (allContacts, filter) => {\n    const normalizeFilterRequest = filter.toLowerCase();\n\n    return allContacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilterRequest),\n    );\n  },\n);\n\nconst phonebookSelectors = {\n  getLoading,\n  getFilter,\n  getCurrentContacts,\n  getAllContacts,\n};\n\nexport default phonebookSelectors;\n","import axios from 'axios';\n\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './phonebook-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(fetchContactRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\n    .catch(error => dispatch(fetchContactError(error)));\n};\n\nconst addContact = contact => dispatch => {\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\nconst deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n\nexport { fetchContacts, addContact, deleteContact };\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addContact, phonebookSelectors } from '../../redux/phonebook';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      [e.currentTarget.name]: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    console.log(this.state);\r\n\r\n    const { name, number } = this.state;\r\n    const { contactList, onSubmit } = this.props;\r\n\r\n    if (\r\n      contactList.some(\r\n        contact => name.toLowerCase() === contact.name.toLowerCase(),\r\n      )\r\n    ) {\r\n      alert(`${name} is already in contacts.`);\r\n      return;\r\n    }\r\n    if (contactList.some(contact => number === contact.number)) {\r\n      alert(`${number} is already in contacts.`);\r\n      return;\r\n    }\r\n\r\n    onSubmit(this.state);\r\n    // this.setState({ name: '', number: '' });\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState(initialState);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form__contact} onSubmit={this.handleSubmit}>\r\n        <label className={s.label} htmlFor=\"input name\">\r\n          <p className={s.title}>Name</p>\r\n          <input\r\n            className={s.input}\r\n            value={this.state.name}\r\n            onChange={this.handleInputChange}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={s.label} htmlFor=\"input number\">\r\n          <p className={s.title}>Number</p>\r\n          <input\r\n            className={s.input}\r\n            value={this.state.number}\r\n            onChange={this.handleInputChange}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={s.button} type=\"submit\">\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contactList: phonebookSelectors.getAllContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ allContacts, onContactDelete }) => {\r\n  //!!!\r\n  console.log(allContacts);\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {allContacts.map(({ name, id, number }) => (\r\n        <li className={s.item} key={id}>\r\n          <div className={s.wrap}>\r\n            <span className={s.name}>\r\n              {name} : {number}\r\n            </span>\r\n            <button\r\n              className={s.button}\r\n              onClick={() => onContactDelete(id)}\r\n              type=\"button\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/phonebook/phonebook-operations';\r\nimport { phonebookSelectors } from '../../redux/phonebook';\r\nimport ContactList from './ContactList';\r\n\r\nconst mapStateToProps = state => ({\r\n  allContacts: phonebookSelectors.getCurrentContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onContactDelete: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nContactList.propTypes = {\r\n  allContacts: PropTypes.array.isRequired,\r\n  onContactDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { phonebookSelectors, changeFilter } from '../../redux/phonebook';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, getFilter }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      <p className={s.title}>Find contact by name</p>\r\n      <input\r\n        className={s.input}\r\n        onChange={getFilter}\r\n        value={value}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        required\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: phonebookSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getFilter: e => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nFilter.propTypes = {\r\n  getFilter: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","//styles\nimport './App.css';\n\n//components\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport { fetchContacts, phonebookSelectors } from './redux/phonebook';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <Container title=\"Phonebook\">\n        <ContactForm />\n        <Filter />\n        {this.props.isLoading && <span>Loading...</span>}\n        <ContactList />\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoading: phonebookSelectors.getLoading(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","//styles\nimport './index.css';\n\n//\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { store } from 'redux/store';\n\nimport App from './App.jsx';\n// import { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__contact\":\"ContactForm_form__contact__UeVMo\",\"label\":\"ContactForm_label__dwffq\",\"title\":\"ContactForm_title__Zw8CT\",\"input\":\"ContactForm_input__1JmSX\",\"button\":\"ContactForm_button__YvlqJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__y248A\",\"item\":\"ContactList_item__mPjFq\",\"name\":\"ContactList_name__286Tb\",\"wrap\":\"ContactList_wrap__32kGz\",\"button\":\"ContactList_button__1RCgB\"};"],"sourceRoot":""}